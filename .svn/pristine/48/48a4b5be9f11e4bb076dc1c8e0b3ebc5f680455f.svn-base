<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans  
       http://www.springframework.org/schema/beans/spring-beans.xsd  
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context.xsd  
       http://www.springframework.org/schema/mvc  
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">  

		<bean id="SpringContextUtil" class="org.work.util.SpringContextUtil" lazy-init="false"></bean>  
		    
        <!-- 自动扫描 -->
        <context:component-scan base-package="org.szd.base">
            <!-- 扫描时跳过 @Controller 注解的JAVA类（控制器） -->
            <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>
        
        <context:component-scan base-package="redis"></context:component-scan>

   <!--********************************************配置hibernate********************************************-->

    <!--扫描配置文件(这里指向的是之前配置的那个config.properties)-->
    <context:property-placeholder location="classpath:/config/jdbc.properties" />

    <!--配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />  <!--数据库连接驱动-->
        <property name="jdbcUrl" value="${jdbc.url}" />     <!--数据库地址-->
        <property name="user" value="${jdbc.username}" />   <!--用户名-->
        <property name="password" value="${jdbc.password}" />   <!--密码-->
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />      <!--最大连接数-->
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />       <!--最小连接数-->
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}" />      <!--初始化连接池内的数据库连接-->
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />  <!--最大空闲时间-->
    </bean>

    <!--配置session工厂-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="org.szd.base.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> <!--hibernate根据实体自动生成数据库表-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>   <!--指定数据库方言-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>     <!--在控制台显示执行的数据库操作语句-->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>     <!--在控制台显示执行的数据哭操作语句（格式）-->
            </props>
        </property>
    </bean>

    <!-- 事物管理器配置  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- 配置事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED"/> 
            <tx:method name="save*" propagation="REQUIRED"/> 
            <tx:method name="add*" propagation="REQUIRED"/> 
            <tx:method name="create*" propagation="REQUIRED"/> 
            <tx:method name="insert*" propagation="REQUIRED"/> 
            <tx:method name="delete*" propagation="REQUIRED"/> 
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
     <!-- 配置事务的的切点AOP，并把事务属性与切点关联起来 -->
     <aop:config proxy-target-class="true">
        <aop:pointcut expression="execution(* org.szd.base.service.impl.*.*(..))" id="pointcut"/>
        <aop:pointcut expression="execution(* org.work.platform.dao.impl.*.*(..))" id="pointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
     </aop:config>

</beans>